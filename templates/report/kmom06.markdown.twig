.KMOM06 {
------

Sista kursmomentet är nu slutfört, redo för projekt.

Jag har denna veckan lagt fokus på PHPMetrics och Scrutinizer. Två för mig helt nya verktyg som jag lärt mig uppskatta.
PHPMetrics upplever jag lite mer lättläst där vi snabbt kan kolla igenom och få en god förståelse för hur vår kod ser ut.
Vi bjöds även på fina illustrationer som kan ge oss en ny vy över hur vår kod bedöms. Ett värde som jag inte hittade på Scrutinizer 
men som fann på Metrics var Comment Weight. Oftast så vill jag se att min kod är väldokumenterad med kommentarer, även ett område 
som jag ska bli bättre på, det gav mig en tydlig vy över hur väl jag dokumenterat min kod för att den ska vara lättförstådd för någon 
annan, eller mig själv om 6 månader.

Vi får en klar bild över hur vår komplexitet ser ut, storlek på filer samt vilka varningar de har hittat. En smart och lätt 
verktyg att använda, detta kommer jag implementera framöver i nya projekt.

Scrutinizer gav mig känslan av vi testar fler delar av koden samt noggrannare. Jag uppskattar att det jobbar i bakgrunden och triggas av 
varje push till mitt Git-repo. En stark fördel är också att jag kan se rapporter för alla mina tidigare valideringar för att på så sätt se 
hur min kod har utvecklats. Den pekade ut brister i min kod på ett tydligt sätt, och belönade mig när jag åtgärdade det.

Jag hade först 22% kodtäckning som höjdes till 27% efter implementering av några tester för CardController. Min kodkvalitet började på 
9.79 och slutade på 9.82. Det känns bra med gröna badges som blänker över projektet men jag upplever att det in är något vi ska stirra oss blinda 
på. Som Mikael visade med cImage så kan vi ha en applikation som funkar precis som vi vill, men där våra badges skiner rött.

Bra kod för mig är kod som fungerar, den är lätt att förstå, den är testbar och väldokumenterad. Dessa är punkter som jag kommer ta med mig till 
framtida projekt. Det är bra om det är bra från början, jobbigt att göra dålig kod bra.

TIL för mig denna veckan är att jag har fått en bättre och klarare förståelse för vad bra kod är. Jag har även gjort förbättringar i min kod för 
att höja mitt resultat. Detta fick mig att tänka på ett annat sätt än när jag först skrev koden från början. En stark läxa som jag kommer bära med mig.

}
------